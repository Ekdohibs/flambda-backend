(function caml_curry_generic
     (callee_closure/30: val i0/31: addr i1/32: addr i2/33: addr i3/34: addr
      i4/35: addr i5/36: addr i6/37: addr i7/38: addr i8/39: addr
      f0/40: float f1/41: float f2/42: float f3/43: float f4/44: float
      f5/45: float f6/46: float f7/47: float f8/48: float f9/49: float)
 (let
   (startenv/57 (>>u (<< (load int (+ callee_closure/30 8)) 9) 10)
    layout/59 (load int (- startenv/57 8))
    num_complex_params_already_applied/58 (load int (- startenv/57 16))
    layout_this_param/55
      (+ layout/59 (* num_complex_params_already_applied/58 8)))
   (catch
     (exit 4
       (extcall "caml_num_scannable_unarized_params" callee_closure/30
         num_complex_params_already_applied/58 int,int->int)
       (extcall "caml_num_non_scannable_unarized_params" callee_closure/30
         num_complex_params_already_applied/58 int,int->int))
   with(4 num_scannable/60: int num_non_scannable/61: int)
     (let
       (closure_size/62 (+ (+ num_scannable/60 num_non_scannable/61) 4)
        temp_closure/50 (extcall "malloc" (* closure_size/62 8) int->int))
       (catch
         (catch rec
           (exit 2 0 0 temp_closure/50
             (+ temp_closure/50 (* (+ num_non_scannable/61 3) 8)))
         with(2 int_reg_num/51: int float_reg_num/52: int
           non_scannable_ptr/53: int scannable_ptr/54: int)
           (let
             layout_field/56
               (load int
                 (+ layout_this_param/55
                   (* (+ int_reg_num/51 float_reg_num/52) 8)))
             (if (== layout_field/56 0) (exit 3)
               (if (!= layout_field/56 3)
                 (if (== layout_field/56 1)
                   (seq
                     (if (>= int_reg_num/51 9)
                       (move_incoming_param 0 int_reg_num/51
                         scannable_ptr/54)
                       (switch int_reg_num/51 
                       case 0: (store int(init) scannable_ptr/54 i0/31)
                       case 1: (store int(init) scannable_ptr/54 i1/32)
                       case 2: (store int(init) scannable_ptr/54 i2/33)
                       case 3: (store int(init) scannable_ptr/54 i3/34)
                       case 4: (store int(init) scannable_ptr/54 i4/35)
                       case 5: (store int(init) scannable_ptr/54 i5/36)
                       case 6: (store int(init) scannable_ptr/54 i6/37)
                       case 7: (store int(init) scannable_ptr/54 i7/38)
                       case 8: (store int(init) scannable_ptr/54 i8/39)))
                     (extcall "caml_register_global_root" scannable_ptr/54
                       int->int)
                     (exit 2 (+ int_reg_num/51 1) float_reg_num/52
                       non_scannable_ptr/53 (+ scannable_ptr/54 8)))
                   (seq
                     (if (>= int_reg_num/51 9)
                       (move_incoming_param 0 int_reg_num/51
                         non_scannable_ptr/53)
                       (switch int_reg_num/51 
                       case 0: (store int(init) non_scannable_ptr/53 i0/31)
                       case 1: (store int(init) non_scannable_ptr/53 i1/32)
                       case 2: (store int(init) non_scannable_ptr/53 i2/33)
                       case 3: (store int(init) non_scannable_ptr/53 i3/34)
                       case 4: (store int(init) non_scannable_ptr/53 i4/35)
                       case 5: (store int(init) non_scannable_ptr/53 i5/36)
                       case 6: (store int(init) non_scannable_ptr/53 i6/37)
                       case 7: (store int(init) non_scannable_ptr/53 i7/38)
                       case 8: (store int(init) non_scannable_ptr/53 i8/39)))
                     (exit 2 (+ int_reg_num/51 1) float_reg_num/52
                       (+ non_scannable_ptr/53 8) scannable_ptr/54)))
                 (seq
                   (if (>= float_reg_num/52 10)
                     (move_incoming_param 1 float_reg_num/52
                       non_scannable_ptr/53)
                     (switch float_reg_num/52 
                     case 0: (store float64(init) non_scannable_ptr/53 f0/40)
                     case 1: (store float64(init) non_scannable_ptr/53 f1/41)
                     case 2: (store float64(init) non_scannable_ptr/53 f2/42)
                     case 3: (store float64(init) non_scannable_ptr/53 f3/43)
                     case 4: (store float64(init) non_scannable_ptr/53 f4/44)
                     case 5: (store float64(init) non_scannable_ptr/53 f5/45)
                     case 6: (store float64(init) non_scannable_ptr/53 f6/46)
                     case 7: (store float64(init) non_scannable_ptr/53 f7/47)
                     case 8: (store float64(init) non_scannable_ptr/53 f8/48)
                     case 9: (store float64(init) non_scannable_ptr/53 f9/49)))
                   (exit 2 int_reg_num/51 (+ float_reg_num/52 1)
                     (+ non_scannable_ptr/53 8) scannable_ptr/54))))))
       with(3)
         (extcall "caml_curry_generic_helper" callee_closure/30 9 10
           temp_closure/50 num_scannable/60 num_non_scannable/61 layout/59
           num_complex_params_already_applied/58 int,int,int->val))))))

Fatal error: exception Invalid_argument("index out of bounds")
